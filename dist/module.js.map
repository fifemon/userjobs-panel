{"version":3,"sources":["../src/module.js"],"names":[],"mappings":"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","file":"module.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport moment from 'moment';\n\nfunction background_style(value, limit) {\n    var bg;\n    if (value > limit) {\n        bg=' style=\"background-color:rgba(245, 54, 54, 0.9);color: white\"';\n    } else if (value > limit*0.9) {\n        bg=' style=\"background-color:rgba(237, 129, 40, 0.890196);color: black\"';\n    } else {\n        bg='';\n    }\n    return bg;\n}\n\nexport class UserJobsCtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector, $rootScope, templateSrv) {\n    super($scope, $injector);\n    this.$rootScope = $rootScope;\n    this.templateSrv = templateSrv;\n\n    var panelDefaults = {\n        index: \"\",\n        query: \"*\",\n        mode: \"Active\", // \"Active\",\"Completed\"\n        size: 100,\n        scroll: false,\n        sortField: 'submit_date',\n        sortOrder: 'asc',\n        queries: [\n            {name: \"-- custom --\", query:\"\"}\n        ]\n    };\n    _.defaults(this.panel, panelDefaults);\n\n    this.data = [];\n    this.docs = 0;\n    this.docsMissing = 0;\n    this.docsTotal = 0;\n    this.rowCount = 0;\n    this.filterQuery = {name: \"all jobs\",query:\"\"};\n    this.customQuery = \"\";\n    this.columns = [\n        {name: \"Cluster\", title: \"Job Cluster ID\", \n            field: \"_term\", modes:['Active','Completed']},\n        {name: \"I\", title: \"# Idle Jobs\", \n            field: \"idle\", modes:['Active']},\n        {name: \"R\", title: \"# Running Jobs\", \n            field: \"running\", modes:['Active']},\n        {name: \"H\", title: \"# Held Jobs\", \n            field: \"held\", modes:['Active']},\n        {name: \"N\", title: \"# Jobs\", \n            field: \"doc_count\", modes:['Completed']},\n        {name: \"Submit Time\", title: \"Time job was sumbitted\", \n            field: \"submit_date\", modes:['Active','Completed']},\n        {name: \"End Time\", title: \"Time job was completed or cancelled\", \n            field: \"last_update\", modes:['Completed']},\n        {name: \"Memory (MB)\", title: \"Max used and requested memory\", \n            field: \"max_mem\", modes:['Active','Completed']},\n        {name: \"Disk (MB)\", title: \"Max used and requested disk\", \n            field: \"max_disk\", modes:['Active','Completed']},\n        {name: \"Time (hr)\", title: \"Max used and requested walltime\", \n            field: \"max_walltime\", modes:['Active','Completed']},\n        {name: \"Max Eff.\", title: \"Max CPU efficiency (CPU time / walltime)\", \n            field: \"max_efficiency\", modes:['Active','Completed']},\n        {name: \"Starts\", title: \"Max number of times a job has started\", \n            field: \"max_restarts\", modes:['Active','Completed']}\n    ];\n\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/plugins/fifemon-userjobs-panel/editor.html', 2);\n  }\n\n  issueQueries(datasource) {\n      this.updateTimeRange();\n      this.datasource=datasource;\n      return datasource._post(this.panel.index+'/'+'_search',this.get_clusters_query()).then(function(res) {\n          return {data: res};\n      });\n  }\n\n  onDataReceived(data) {\n      if (data) {\n          this.data = data.aggregations.cluster.buckets;\n          this.docsMissing = data.aggregations.cluster.sum_other_doc_count;\n          this.docsTotal = data.hits.total;\n          this.docs = this.docsTotal - this.docsMissing;\n          this.rowCount = this.data.length;\n      } else {\n          this.data = [];\n      }\n      this.render(this.data);\n  }\n\n  render() {\n      return super.render(this.data);\n  }\n\n  toggleSort(field) {\n      if (field === this.panel.sortField) {\n          this.panel.sortOrder = this.panel.sortOrder === 'asc' ? 'desc' : 'asc';\n      } else {\n          this.panel.sortField = field;\n          this.panel.sortOrder = 'asc';\n      }\n      this.refresh();\n  }\n\n  addQuery() {\n      var custom = this.panel.queries.pop();\n      this.panel.queries.push({name:'new query',query:''});\n      this.panel.queries.push(custom);\n  }\n\n  removeQuery(name) {\n      _.remove(this.panel.queries, {'name':name});\n  }\n\n  link(scope, elem, attrs, ctrl) {\n      var data;\n      var panel = ctrl.panel;\n      var pageCount = 0;\n\n      function getTableHeight() {\n          var panelHeight = ctrl.height;\n          /*if (pageCount > 1) {\n              panelHeight -= 26;\n          }*/\n          return (panelHeight - 31) + 'px';\n      }\n\n      function renderPanel() {\n          var root = elem.find('.table-panel-scroll');\n          root.css({'max-height': panel.scroll ? getTableHeight() : ''});\n\n          var tbody = elem.find('tbody');\n          renderTable(tbody);\n      }\n\n      function renderTable(tbody) {\n          tbody.empty();\n          var html = '';\n          for (var i = 0; i < data.length; i++) {\n              html += renderActiveRow(data[i]);\n          }\n          tbody.html(html);\n      }\n\n      function renderActiveRow(data) {\n          function formatDate(date) {\n              var d = moment(date.value_as_string);\n              if (ctrl.dashboard.timezone == 'utc') {\n                  d.utc();\n              }\n              return  d.format('ddd MMM DD HH:mm ZZ');\n          }\n\n          var schedd = data.cmd.hits.hits[0]._source.schedd;\n          var cmd = data.cmd.hits.hits[0]._source.Cmd.split('/').pop();\n          var bg_hold = background_style(data.held.doc_count*100,1.0);\n          var max_mem = data.max_mem.value / 1024;\n          var max_disk = data.max_disk.value / 1024;\n          var max_cputime = data.max_cputime.value / 3600;\n          var max_walltime = data.max_walltime.value / 3600;\n          var efficiency=\"----\";\n          if (max_walltime > 0) {\n              efficiency = (data.max_efficiency.value*100).toFixed(1)+'%';\n          }\n          var html = '<tr>'+\n              '<td rowspan=\"2\"><a style=\"text-decoration:underline;\" href=\"dashboard/db/job-cluster-summary?var-cluster='+data.key+'&var-schedd='+schedd+'&from='+data.submit_date.value+'&to='+ctrl.rangeRaw.to+'\">'+data.key+'@'+schedd+'</a></td>';\n          if (panel.mode === 'Active') {\n              html += '<td rowspan=\"2\">'+data.idle.doc_count+'</td>'+\n              '<td rowspan=\"2\">'+data.running.doc_count+'</td>'+\n              '<td rowspan=\"2\"' + bg_hold + '>'+data.held.doc_count+'</td>';\n          } else if (panel.mode == 'Completed') {\n              html += '<td rowspan=\"2\">'+data.doc_count+'</td>';\n          }\n          html += '<td>'+formatDate(data.submit_date)+'</td>';\n          if (panel.mode === 'Completed') {\n              html += '<td>'+formatDate(data.last_update)+'</td>';\n          }\n          html += '<td>' + max_mem.toFixed(0) +'&nbsp;&nbsp;&nbsp;&nbsp;</td>'+\n              '<td>' + max_disk.toFixed(0) +'&nbsp;&nbsp;&nbsp;&nbsp;</td>'+\n              '<td>' + max_walltime.toFixed(0) +'&nbsp;&nbsp;&nbsp;&nbsp;</td>'+\n              '<td>'+ efficiency +'</td>'+\n              '<td>'+data.max_restarts.value+'&nbsp;&nbsp;&nbsp;&nbsp;</td>'+\n              '</tr>';\n          if (panel.mode === 'Active') {\n              html += '<tr><td colspan=\"6\" class=\"job-command\">'+cmd+'</td></tr>';\n          } else if (panel.mode === 'Completed') {\n              html += '<tr><td colspan=\"7\" class=\"job-command\">'+cmd+'</td></tr>';\n          }\n          return html;\n      }\n\n\n      ctrl.events.on('render', function(renderData) {\n          data = renderData || data;\n          if (data) {\n              renderPanel();\n          }\n          ctrl.renderingCompleted();\n      });\n  }\n\n  get_clusters_query() {\n      var q = this.templateSrv.replace(this.panel.query, this.panel.scopedVars);\n      if (this.filterQuery && this.filterQuery.name === '-- custom --') {\n          if (this.customQuery !== '') {\n              q += ' AND (' + this.customQuery + ')';\n          }\n      } else if (this.filterQuery && this.filterQuery.query !== '') {\n          q += ' AND (' + this.filterQuery.query + ')';\n      }\n\n      var from = this.rangeRaw.from;\n      var to = this.rangeRaw.to;\n      // time range hack; really should have separate indices for active and completed jobs\n      if (this.panel.mode === 'Active') {\n          from = 'now-10m';\n          to = 'now';\n      } else if (this.panel.mode === 'Completed' && to === 'now') {\n          to = 'now-10m';\n      }\n\n      var sort = {};\n      sort[this.panel.sortField] = this.panel.sortOrder;\n\n      var data = {\n          \"size\": 0,\n          \"query\": {\n              \"filtered\": {\n                  \"query\": {\n                      \"query_string\": { \n                          \"query\": q, \n                          \"lowercase_expanded_terms\": false\n                      }\n                  },\n                  \"filter\": {\n                      \"range\": { \"timestamp\": { \"gte\": from, \"lte\": to }}\n                  }\n              }\n          },\n          \"aggs\": {\n              \"cluster\": {\n                  \"terms\": {\n                      \"field\": \"cluster\",\n                      \"size\": this.panel.size,\n                      \"order\" : sort\n                  },\n                  \"aggs\": {\n                      \"max_mem\": {\n                          \"max\": {\n                              \"field\": \"ResidentSetSize_RAW\"\n                          }\n                      },\n                      \"max_disk\": {\n                          \"max\": {\n                              \"field\": \"DiskUsage_RAW\"\n                          }\n                      },\n                      \"submit_date\": {\n                          \"min\": {\n                              \"field\": \"submit_date\"\n                          }\n                      },\n                      \"last_update\": {\n                          \"max\": {\n                              \"field\": \"@timestamp\"\n                          }\n                      },\n                      \"max_restarts\": {\n                          \"max\": {\n                              \"field\": \"NumJobStarts\"\n                          }\n                      },\n                      \"max_efficiency\": {\n                          \"max\": {\n                              \"field\": \"efficiency\"\n                          }\n                      },\n                      \"max_cputime\": {\n                          \"max\": {\n                              \"field\": \"RemoteUserCpu\"\n                          }\n                      },\n                      \"max_walltime\": {\n                          \"max\": {\n                              \"field\": \"walltime\"\n                          }\n                      },\n                      \"cmd\": {\n                          \"top_hits\": {\n                              \"size\": 1,\n                              \"_source\": {\n                                  \"include\": [\"Cmd\", \"schedd\"]\n                              }\n                          }\n                      },\n                      \"idle\": {\n                          \"filter\": { \"term\": { \"status\": 1 }}\n                      },\n                      \"running\": {\n                          \"filter\": { \"term\": { \"status\": 2 }}\n                      },\n                      \"cancelled\": {\n                          \"filter\": { \"term\": { \"status\": 3 }}\n                      },\n                      \"complete\": {\n                          \"filter\": { \"term\": { \"status\": 4 }}\n                      },\n                      \"held\": {\n                          \"filter\": { \"term\": { \"status\": 5 }}\n                      },\n                  }\n              }\n          }\n      };\n      return data;\n  }\n\n}\n\nUserJobsCtrl.templateUrl = 'module.html';\n\nexport {\n  UserJobsCtrl as PanelCtrl\n};\n\n"]}