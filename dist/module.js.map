{"version":3,"sources":["../src/module.js"],"names":["background_style","value","limit","bg","MetricsPanelCtrl","_","moment","UserJobsCtrl","$scope","$injector","$rootScope","templateSrv","panelDefaults","index","query","mode","size","scroll","sortField","sortOrder","queries","name","defaults","panel","data","docs","docsMissing","docsTotal","rowCount","filterQuery","customQuery","columns","title","field","modes","events","on","onDataReceived","bind","onInitEditMode","addEditorTab","datasource","updateTimeRange","_post","JSON","stringify","get_clusters_query","then","res","response","responses","aggregations","cluster","buckets","sum_other_doc_count","hits","total","length","render","refresh","custom","pop","push","remove","scope","elem","attrs","ctrl","pageCount","getTableHeight","panelHeight","height","renderPanel","root","find","css","tbody","renderTable","empty","html","i","renderActiveRow","formatDate","date","d","value_as_string","dashboard","timezone","utc","format","schedd","cmd","_source","isDAG","env","DAGMANJOBID","Cmd","split","bg_hold","held","doc_count","request_mem","max_mem","bg_mem","request_disk","max_disk","bg_disk","max_cputime","max_walltime","efficiency","max_efficiency","toFixed","request_time","request_walltime","bg_time","key","submit_date","rangeRaw","to","idle","running","completed","last_update","max_restarts","renderData","renderingCompleted","q","replace","scopedVars","from","sort","templateUrl"],"mappings":"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","file":"module.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport moment from 'moment';\n\nfunction background_style(value, limit) {\n    var bg;\n    if (value > limit) {\n        bg=' style=\"background-color:rgba(245, 54, 54, 0.9);color: white\"';\n    } else if (value > limit*0.9) {\n        bg=' style=\"background-color:rgba(237, 129, 40, 0.890196);color: black\"';\n    } else {\n        bg='';\n    }\n    return bg;\n}\n\nexport class UserJobsCtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector, $rootScope, templateSrv) {\n    super($scope, $injector);\n    this.$rootScope = $rootScope;\n    this.templateSrv = templateSrv;\n\n    var panelDefaults = {\n        index: \"\",\n        query: \"*\",\n        mode: \"Combined\", // \"Active\",\"Completed\",\"Combined\"\n        size: 100,\n        scroll: false,\n        sortField: 'submit_date',\n        sortOrder: 'asc',\n        queries: [\n            {name: \"-- custom --\", query:\"\"}\n        ]\n    };\n    _.defaults(this.panel, panelDefaults);\n\n    this.data = [];\n    this.docs = 0;\n    this.docsMissing = 0;\n    this.docsTotal = 0;\n    this.rowCount = 0;\n    this.filterQuery = {name: \"all jobs\",query:\"\"};\n    this.customQuery = \"\";\n    this.columns = [\n        {name: \"Cluster\", title: \"Job Cluster ID\", \n          field: \"_term\", modes:['Active','Completed','Combined']},\n        {name: \"I\", title: \"# Idle Jobs\", \n         field: \"idle\", modes:['Active','Combined']},\n        {name: \"R\", title: \"# Running Jobs\", \n         field: \"running\", modes:['Active','Combined']},\n        {name: \"C\", title: \"# Completed or Cancelled Jobs\", \n         field: \"completed\", modes:['Completed','Combined']},\n        {name: \"H\", title: \"# Held Jobs\", \n         field: \"held\", modes:['Active','Combined']},\n        {name: \"Submit Time\", title: \"Time job was sumbitted\", \n         field: \"submit_date\", modes:['Active','Completed','Combined']},\n        {name: \"Last Update Time\", title: \"Time job was last seen in queue\", \n         field: \"last_update\", modes:['Completed','Combined']},\n        {name: \"Memory (MB)\", title: \"Max used and requested memory\", \n         field: \"max_mem\", modes:['Active','Completed','Combined']},\n        {name: \"Disk (MB)\", title: \"Max used and requested disk\", \n         field: \"max_disk\", modes:['Active','Completed','Combined']},\n        {name: \"Time (hr)\", title: \"Max used and requested walltime\", \n         field: \"max_walltime\", modes:['Active','Completed','Combined']},\n        {name: \"Max Eff.\", title: \"Max CPU efficiency (CPU time / walltime)\", \n         field: \"max_efficiency\", modes:['Active','Completed','Combined']},\n        {name: \"Starts\", title: \"Max number of times a job has started\", \n         field: \"max_restarts\", modes:['Active','Completed','Combined']}\n    ];\n\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/plugins/fifemon-userjobs-panel/editor.html', 2);\n  }\n\n  issueQueries(datasource) {\n      this.updateTimeRange();\n      this.datasource=datasource;\n      return datasource._post('_msearch','{\"index\":\"'+this.panel.index+'\"}\\n'+JSON.stringify(this.get_clusters_query())+'\\n\\n').then(function(res) {\n          return {data: res};\n      });\n  }\n\n  onDataReceived(data) {\n      if (data) {\n          var response = data.responses[0]\n          this.data = response.aggregations.cluster.buckets;\n          this.docsMissing = response.aggregations.cluster.sum_other_doc_count;\n          this.docsTotal = response.hits.total;\n          this.docs = this.docsTotal - this.docsMissing;\n          this.rowCount = this.data.length;\n      } else {\n          this.data = [];\n      }\n      this.render(this.data);\n  }\n\n  render() {\n      return super.render(this.data);\n  }\n\n  toggleSort(field) {\n      if (field === this.panel.sortField) {\n          this.panel.sortOrder = this.panel.sortOrder === 'asc' ? 'desc' : 'asc';\n      } else {\n          this.panel.sortField = field;\n          this.panel.sortOrder = 'asc';\n      }\n      this.refresh();\n  }\n\n  addQuery() {\n      var custom = this.panel.queries.pop();\n      this.panel.queries.push({name:'new query',query:''});\n      this.panel.queries.push(custom);\n  }\n\n  removeQuery(name) {\n      _.remove(this.panel.queries, {'name':name});\n  }\n\n  link(scope, elem, attrs, ctrl) {\n      var data;\n      var panel = ctrl.panel;\n      var pageCount = 0;\n\n      function getTableHeight() {\n          var panelHeight = ctrl.height;\n          /*if (pageCount > 1) {\n              panelHeight -= 26;\n          }*/\n          return (panelHeight - 31) + 'px';\n      }\n\n      function renderPanel() {\n          var root = elem.find('.table-panel-scroll');\n          root.css({'max-height': panel.scroll ? getTableHeight() : ''});\n\n          var tbody = elem.find('tbody');\n          renderTable(tbody);\n      }\n\n      function renderTable(tbody) {\n          tbody.empty();\n          var html = '';\n          for (var i = 0; i < data.length; i++) {\n              html += renderActiveRow(data[i]);\n          }\n          tbody.html(html);\n      }\n\n      function renderActiveRow(data) {\n          function formatDate(date) {\n              var d = moment(date.value_as_string);\n              if (ctrl.dashboard.timezone == 'utc') {\n                  d.utc();\n              }\n              return  d.format('ddd MMM DD HH:mm ZZ');\n          }\n\n          var schedd = data.cmd.hits.hits[0]._source.schedd;\n          var isDAG = data.cmd.hits.hits[0]._source.env != null && data.cmd.hits.hits[0]._source.env.DAGMANJOBID != null;\n          var cmd = data.cmd.hits.hits[0]._source.Cmd.split('/').pop();\n          var bg_hold = background_style(data.held.doc_count*100,1.0);\n          var request_mem = data.request_mem.value*1;\n          var max_mem = data.max_mem.value / 1024;\n          var bg_mem=background_style(max_mem,request_mem);\n          var request_disk = data.request_disk.value / 1024;\n          var max_disk = data.max_disk.value / 1024;\n          var bg_disk=background_style(max_disk,request_disk);\n          var max_cputime = data.max_cputime.value / 3600;\n          var max_walltime = data.max_walltime.value / 3600;\n          var efficiency=\"----\";\n          if (max_walltime > 0) {\n              efficiency = (data.max_efficiency.value*100).toFixed(1)+'%';\n          }\n          var request_time = data.request_walltime.value / 3600;\n          var bg_time=background_style(max_walltime,request_time);\n          var html = '<tr>';\n          if (isDAG) {\n              html += '<td rowspan=\"2\"><a style=\"text-decoration:underline;\" href=\"dashboard/db/dag-cluster-summary?var-cluster='+data.key+'&var-schedd='+schedd+'&from='+data.submit_date.value+'&to='+ctrl.rangeRaw.to+'\">'+data.key+'@'+schedd+'</a> (DAG)</td>';\n          } else {\n              html += '<td rowspan=\"2\"><a style=\"text-decoration:underline;\" href=\"dashboard/db/job-cluster-summary?var-cluster='+data.key+'&var-schedd='+schedd+'&from='+data.submit_date.value+'&to='+ctrl.rangeRaw.to+'\">'+data.key+'@'+schedd+'</a></td>';\n          }\n          if (panel.mode === 'Active') {\n              html += '<td rowspan=\"2\">'+data.idle.doc_count+'</td>'+\n              '<td rowspan=\"2\">'+data.running.doc_count+'</td>'+\n              '<td rowspan=\"2\"' + bg_hold + '>'+data.held.doc_count+'</td>';\n          } else if (panel.mode == 'Completed') {\n              html += '<td rowspan=\"2\">'+data.doc_count+'</td>';\n          } else if (panel.mode == 'Combined') {\n              html += '<td rowspan=\"2\">'+data.idle.doc_count+'</td>'+\n                  '<td rowspan=\"2\">'+data.running.doc_count+'</td>'+\n                  '<td rowspan=\"2\">'+data.completed.doc_count+'</td>'+\n                  '<td rowspan=\"2\"' + bg_hold + '>'+data.held.doc_count+'</td>';\n          }\n          html += '<td>'+formatDate(data.submit_date)+'</td>';\n          if (panel.mode === 'Completed' || panel.mode === 'Combined') {\n              html += '<td>'+formatDate(data.last_update)+'</td>';\n          }\n          html += '<td' + bg_mem + '>' + max_mem.toFixed(0) + ' / ' + request_mem.toFixed(0) +'</td>'+\n              '<td' + bg_disk + '>' + max_disk.toFixed(0) + ' / ' + request_disk.toFixed(0) +'</td>'+\n              '<td' + bg_time + '>' + max_walltime.toFixed(0) + ' / ' + request_time.toFixed(0) +'</td>'+\n              //'<td>'+ max_cputime.toFixed(2) +' hr</td>'+\n              '<td>'+ efficiency +'</td>'+\n              '<td>'+data.max_restarts.value+'&nbsp;&nbsp;&nbsp;&nbsp;</td>'+\n              '</tr>';\n          if (panel.mode === 'Active') {\n              html += '<tr><td colspan=\"6\" class=\"job-command\">'+cmd+'</td></tr>';\n          } else if (panel.mode === 'Completed') {\n              html += '<tr><td colspan=\"7\" class=\"job-command\">'+cmd+'</td></tr>';\n          } else if (panel.mode === 'Combined') {\n              html += '<tr><td colspan=\"8\" class=\"job-command\">'+cmd+'</td></tr>';\n          }\n          return html;\n      }\n\n\n      ctrl.events.on('render', function(renderData) {\n          data = renderData || data;\n          if (data) {\n              renderPanel();\n          }\n          ctrl.renderingCompleted();\n      });\n  }\n\n  get_clusters_query() {\n      var q = this.templateSrv.replace(this.panel.query, this.panel.scopedVars);\n      if (this.filterQuery && this.filterQuery.name === '-- custom --') {\n          if (this.customQuery !== '') {\n              q += ' AND (' + this.customQuery + ')';\n          }\n      } else if (this.filterQuery && this.filterQuery.query !== '') {\n          q += ' AND (' + this.filterQuery.query + ')';\n      }\n\n      var from = this.rangeRaw.from;\n      var to = this.rangeRaw.to;\n      // time range hack; really should have separate indices for active and completed jobs\n      if (this.panel.mode === 'Active') {\n          from = 'now-10m';\n          to = 'now';\n      } else if (this.panel.mode === 'Completed' && to === 'now') {\n          to = 'now-10m';\n      }\n\n      var sort = {};\n      sort[this.panel.sortField] = this.panel.sortOrder;\n\n      var data = {\n          \"size\": 0,\n          \"query\": {\n              \"bool\": {\n                  \"must\": {\n                      \"query_string\": { \n                          \"query\": q, \n                          \"lowercase_expanded_terms\": false\n                      }\n                  },\n                  \"filter\": {\n                      \"range\": { \"timestamp\": { \"gte\": from, \"lte\": to }}\n                  }\n              }\n          },\n          \"aggs\": {\n              \"cluster\": {\n                  \"terms\": {\n                      \"field\": \"cluster\",\n                      \"script\": {\n                          \"inline\": \"doc['env.DAGMANJOBID']?.value != null ? Integer.parseInt(doc['env.DAGMANJOBID']?.value) : _value\"\n                      },\n                      \"size\": this.panel.size,\n                      \"order\" : sort\n                  },\n                  \"aggs\": {\n                      \"max_mem\": {\n                          \"max\": {\n                              \"field\": \"ResidentSetSize_RAW\"\n                          }\n                      },\n                      \"request_mem\": {\n                          \"min\": {\n                              \"field\": \"RequestMemory\"\n                          }\n                      },\n                      \"max_disk\": {\n                          \"max\": {\n                              \"field\": \"DiskUsage_RAW\"\n                          }\n                      },\n                      \"request_disk\": {\n                          \"min\": {\n                              \"field\": \"RequestDisk\"\n                          }\n                      },\n                      \"submit_date\": {\n                          \"min\": {\n                              \"field\": \"submit_date\"\n                          }\n                      },\n                      \"last_update\": {\n                          \"max\": {\n                              \"field\": \"@timestamp\"\n                          }\n                      },\n                      \"max_restarts\": {\n                          \"max\": {\n                              \"field\": \"NumJobStarts\"\n                          }\n                      },\n                      \"max_efficiency\": {\n                          \"max\": {\n                              \"field\": \"efficiency\"\n                          }\n                      },\n                      \"max_cputime\": {\n                          \"max\": {\n                              \"field\": \"RemoteUserCpu\"\n                          }\n                      },\n                      \"max_walltime\": {\n                          \"max\": {\n                              \"field\": \"walltime\"\n                          }\n                      },\n                      \"request_walltime\": {\n                          \"max\": {\n                              \"field\": \"JOB_EXPECTED_MAX_LIFETIME\"\n                          }\n                      },\n                      \"cmd\": {\n                          \"top_hits\": {\n                              \"size\": 1,\n                              \"_source\": {\n                                  \"includes\": [\"Cmd\", \"schedd\", \"env.DAGMANJOBID\"]\n                              }\n                          }\n                      },\n                      \"idle\": {\n                          \"filter\": {\n                              \"query_string\": {\n                                  \"query\": \"status:1 AND timestamp:[now-10m TO now]\"\n                              }\n                          }\n                      },\n                      \"running\": {\n                          \"filter\": {\n                              \"query_string\": {\n                                  \"query\": \"status:2 AND timestamp:[now-10m TO now]\"\n                              }\n                          }\n                      },\n                      \"completed\": {\n                          \"filter\": {\n                              \"range\": { \"timestamp\": { \"lte\": \"now-10m\" }}\n                          }\n                      },\n                      \"held\": {\n                          \"filter\": {\n                              \"query_string\": {\n                                  \"query\": \"status:5 AND timestamp:[now-10m TO now]\"\n                              }\n                          }\n                      },\n                  }\n              }\n          }\n      };\n      return data;\n  }\n\n}\n\nUserJobsCtrl.templateUrl = 'module.html';\n\nexport {\n  UserJobsCtrl as PanelCtrl\n};\n\n"]}